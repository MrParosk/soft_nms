name: master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test-cpp:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt-get install -y wget unzip cmake libgtest-dev clang-format
      - name: Fetch libtorch
        run: wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-2.0.1%2Bcpu.zip && unzip libtorch-cxx11-abi-shared-with-deps-2.0.1+cpu.zip
      - name: Run format checking
        run: bash scripts/run_format.sh -c
      - name: Run tests
        run: bash scripts/run_cpp_tests.sh

  linting-code-coverage-python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install test dependencies
      run: |
        python -m pip install -r requirements-dev.txt
    - name: Running flake8
      run: |
        flake8 .
    - name: Running isort
      run: |
        isort . --check
    - name: Running black
      run: |
        black . --check --line-length=128
    - name: Running mypy
      run: |
        mypy .
    - name: Install pytorch
      run: |
        python -m pip install torch==2.0.1+cpu -f https://download.pytorch.org/whl/torch_stable.html
        python -m pip list -V
        which python
        python -c 'import torch'
    - name: Code coverage
      run: |
        python -m pip install -e .
        pytest --cov=pt_soft_nms --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  test-python:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        os: [ubuntu-latest]
        pytorch-version: ['1.13.1', '2.0.1']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pytorch
      run: |
        python -m pip install torch==${{ matrix.pytorch-version }}+cpu -f https://download.pytorch.org/whl/torch_stable.html
    - name: Install package
      run: |
        python -m pip install -r requirements-dev.txt
        python -m pip install .
    - name: Run unit tests
      run: |
        pytest tests/

  build-windows:
    runs-on: "windows-latest"
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
    - uses: actions/checkout@v3
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install test dependencies
      run: |
        python -m pip install -r requirements-dev.txt
    - name: Install pytorch
      run: |
        python -m pip install torch==2.0.1+cpu -f https://download.pytorch.org/whl/torch_stable.html
    - name: Install package
      run: |
        python -m pip install .
      env:
        DISTUTILS_USE_SDK: 1
    - name: Run unit tests
      run: pytest tests/
